# Checks for usage of items through absolute paths, like std::env::current_dir.
[absolute_paths]
group = "restriction"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+absolute_paths"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/absolute_paths"
# Checks for code like foo = bar.clone();
[assigning_clones]
group = "pedantic"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+assigning_clones"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/assigning_clones"
# 
Checks for if and match conditions that use blocks containing an expression, statements or conditions that use closures with blocks.
[blocks_in_conditions]
group = "style"
applicability = "machine-applicable"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+blocks_in_conditions"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/blocks_in_conditions"
# Checks for attributes that allow lints without a reason.
[allow_attributes_without_reason]
group = "restriction"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+allow_attributes_without_reason"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/allow_attributes_without_reason"
# Checks for ranges which almost include the entire range of letters or digits.
[almost_complete_range]
group = "restriction"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+almost_complete_range"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/almost_complete_range"
# Checks for foo = bar; bar = foo sequences.
[almost_swaped]
group = "style"
applicability = "machine-applicable"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+almost_swaped"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/almost_swaped"
# 
Checks for floating point literals that approximate constants which are defined in std::f32::consts or std::f64::consts, respectively, suggesting to use the predefined constant.
[approx_constant]
group = "correctness"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+approx_constant"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/approx_constant"
# This lint warns when you use Arc with a type that does not implement Send or Sync.
[arc_with_non_send_sync]
group = "suspicious"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+arc_with_non_send_sync"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/arc_with_non_send_sync"
# Checks any kind of arithmetic operation of any type.
[arithmetic_side_effects]
group = "restriction"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+arithmetic_side_effects"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/arithmetic_side_effects"
# Checks for usage of as underscore.
[as_underscore]
group = "restriction"
applicability = "machine-applicable"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+as_underscore"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/as_underscore"
# Checks for usage of as conversions.
[as_conversions]
group = "restriction"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+as_conversions"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/as_conversions"
# Checks for the result of a &self-taking as_ptr being cast to a mutable pointer.
[as_ptr_cast_mut]
group = "nursery"
applicability = "maybe-incorrect"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+as_ptr_cast_mut"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/as_ptr_cast_mut"
# Checks for assert!(true) and assert!(false) calls.
[assertions_on_constants]
group = "style"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+assertions_on_constants"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/assertions_on_constants"
# Checks for calls to await while holding a non-async-aware MutexGuard.
[await_holding_lock]
group = "suspicious"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+await_holding_lock"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/await_holding_lock"
# Allows users to configure types which should not be held across await suspension points.
[await_holding_invalid_type]
group = "suspicious"
applicability = "unspecified"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+await_holding_invalid_type"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/await_holding_invalid_type"
# Checks for a = a op b or a = b commutative_op a patterns.
[assign_op_pattern]
group = "style"
applicability = "machine-applicable"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+assign_op_pattern"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/assign_op_pattern"
# Checks for async blocks that yield values of types that can themselves be awaited.
[async_yields_async]
group = "correctness"
applicability = "maybe-incorrect"
# allow warn < deny > none
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+async_yields_async"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/async_yields_async"
