# Checks for usage of items through absolute paths, like std::env::current_dir.
[absolute_paths]
group = "restriction"
applicability = "unspecified"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+absolute_paths"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/absolute_paths"

# Finds items imported through alloc when available through core.
[alloc_instead_of_core]
group = "restriction"
applicability = "machine-applicable"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+alloc_instead_of_core"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/alloc_instead_of_core"

# Checks for comparisons where one side of the relation is either the minimum or maximum value for its type and warns if it involves a case that is always true or always false. Only integer and boolean types are checked.
[absurd_extreme_comparisons]
group = "correctness"
applicability = "unspecified"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+absurd_extreme_comparisons"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/absurd_extreme_comparisons"

# Checks for attributes that allow lints without a reason.
[allow_attributes_without_reason]
group = "restriction"
applicability = "unspecified"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+allow_attributes_without_reason"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/allow_attributes_without_reason"

# Checks for usage of the #[allow] attribute and suggests replacing it with the #[expect].
[allow_attributes]
group = "restriction"
applicability = "machine-applicable"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+allow_attributes"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/allow_attributes"

# Checks for ranges which almost include the entire range of letters or digits
[almost_complete_range]
group = "suspicious"
applicability = "maybe-incorrect"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+almost_complete_range"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/almost_complete_range"

# Checks for floating point literals that approximate
[approx_constant]
group = "correctness"
applicability = "maybe-incorrect"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+approx_constant"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/approx_constant"

# This lint warns when you use Arc with a type that does not implement Send or Sync.
[arc_with_non_send_sync]
group = "suspicious"
applicability = "unspecified"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+arc_with_non_send_sync"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/arc_with_non_send_sync"

# Checks any kind of arithmetic operation of any type.
[arithmetic_side_effects]
group = "restriction"
applicability = "unspecified"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+arithmetic_side_effects"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/arithmetic_side_effects"

# Checks for usage of as conversions.
[as_conversions]
group = "restriction"
applicability = "unspecified"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+as_conversions"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/as_conversions"

# Checks for the usage of as _ conversion using inferred type.
[as_underscore]
group = "restriction"
applicability = "unspecified"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+as_underscore"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/as_underscore"

# Checks for reference-counted pointers (Arc, Rc, rc::Weak, and sync::Weak) in vec![elem; len]
[rc_clone_in_vec_init]
group = "suspicious"
applicability = "has-placeholders"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+rc_clone_in_vec_init"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/rc_clone_in_vec_init"

# Checks for code like foo = bar.clone();
[assigning_clones]
group = "pedantic"
applicability = "unspecified"
severity = "deny"
issue = "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+assigning_clones"
info = "https://rust-lang.github.io/rust-clippy/master/index.html#/assigning_clones"

